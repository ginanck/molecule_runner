---
name: Build Alpine Runner Images

on:
  push:
    branches: [ master ]
    paths:
      - 'dockerfiles/**'
      - 'requirements-*.txt'
      - '.github/workflows/build-images.yml'
  pull_request:
    branches: [ master ]
    paths:
      - 'dockerfiles/**'
      - 'requirements-*.txt'
      - '.github/workflows/build-images.yml'
  workflow_dispatch:
    inputs:
      force_push:
        description: 'Force push images even from PR'
        required: false
        default: false
        type: boolean

env:
  GITHUB_REGISTRY: ghcr.io
  GITHUB_USERNAME: ${{ github.repository_owner }}
  IMAGE_NAME: molecule-runner

permissions:
  contents: read
  packages: write
  security-events: write
  actions: read

jobs:
  # Build stage for PRs - builds only, no push
  build-pr:
    name: Build PR - Python ${{ matrix.python_version }}
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    strategy:
      fail-fast: false
      matrix:
        python_version: ['3.6', '3.7', '3.8', '3.9', '3.10', '3.11', '3.12']

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.GITHUB_REGISTRY }}/${{ env.GITHUB_USERNAME }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=pr
            type=raw,value=python${{ matrix.python_version }}-pr-{{sha}}

      - name: Copy appropriate requirements file to build context
        run: |
          cat requirements-${{ matrix.python_version }}.txt requirements-common.txt > requirements.txt

      - name: Build Docker image (PR - No Push)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./dockerfiles/Dockerfile.python${{ matrix.python_version }}
          platforms: linux/amd64
          push: false
          load: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  # Build and push stage for master branch merges
  build-and-push:
    name: Build & Push - Python ${{ matrix.python_version }}
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || (github.event_name == 'workflow_dispatch' && inputs.force_push)
    strategy:
      fail-fast: false
      matrix:
        python_version: ['3.6', '3.7', '3.8', '3.9', '3.10', '3.11', '3.12']

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.GITHUB_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.GITHUB_REGISTRY }}/${{ env.GITHUB_USERNAME }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=raw,value=python${{ matrix.python_version }}-{{date 'YYYYMMDD-HHmmss'}}
            type=raw,value=python${{ matrix.python_version }}-latest
            type=raw,value=python${{ matrix.python_version }}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Copy appropriate requirements file to build context
        run: |
          cat requirements-${{ matrix.python_version }}.txt requirements-common.txt > requirements.txt

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./dockerfiles/Dockerfile.python${{ matrix.python_version }}
          platforms: linux/amd64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
