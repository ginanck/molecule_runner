---
name: Build Alpine Runner Images

on:
  push:
    branches: [ master ]
    paths:
      - 'dockerfiles/**'
      - 'requirements-*.txt'
      - '.github/workflows/build-images.yml'
  pull_request:
    branches: [ master ]
    paths:
      - 'dockerfiles/**'
      - 'requirements-*.txt'
      - '.github/workflows/build-images.yml'
  workflow_dispatch:
    inputs:
      force_push:
        description: 'Force push images even from PR'
        required: false
        default: false
        type: boolean

env:
  GITHUB_REGISTRY: ghcr.io
  GITHUB_USERNAME: ${{ github.repository_owner }}
  IMAGE_NAME: molecule-runner

permissions:
  contents: read
  packages: write
  security-events: write
  actions: read

jobs:
  # Build stage for PRs - builds only, no push
  build-pr:
    name: Build PR - Ansible ${{ matrix.ansible_version }} (Python ${{ matrix.python_version }})
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    strategy:
      fail-fast: false
      matrix:
        include:
          - python_version: '3.9'
            ansible_version: '2.11'
            ansible_full_version: '2.11.12'

          - python_version: '3.10'
            ansible_version: '2.12'
            ansible_full_version: '2.12.10'

          - python_version: '3.11'
            ansible_version: '2.13'
            ansible_full_version: '2.13.13'

          - python_version: '3.12'
            ansible_version: '2.14'
            ansible_full_version: '2.14.18'

          - python_version: '3.12'
            ansible_version: '2.15'
            ansible_full_version: '2.15.13'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.GITHUB_REGISTRY }}/${{ env.GITHUB_USERNAME }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=pr
            type=raw,value=python${{ matrix.python_version }}-${{ matrix.ansible_full_version }}-pr-{{sha}}

      - name: Copy appropriate requirements file to build context
        run: |
          cat requirements-${{ matrix.ansible_full_version }}.txt requirements-common.txt > requirements.txt

      - name: Build Docker image (PR - No Push)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./dockerfiles/Dockerfile.ansible${{ matrix.ansible_version }}
          platforms: linux/amd64
          push: false
          load: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  # Build and push stage for master branch merges
  build-and-push:
    name: Build & Push - Ansible ${{ matrix.ansible_version }} (Python ${{ matrix.python_version }})
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || (github.event_name == 'workflow_dispatch' && inputs.force_push)
    strategy:
      fail-fast: false
      matrix:
        include:
          - python_version: '3.9'
            ansible_version: '2.11'
            ansible_full_version: '2.11.12'
            tags: |
              type=raw,value=python3.9-2.11.12-latest
              type=raw,value=python3.9-2.11.12

          - python_version: '3.10'
            ansible_version: '2.12'
            ansible_full_version: '2.12.10'
            tags: |
              type=raw,value=python3.10-2.12.10-latest
              type=raw,value=python3.10-2.12.10

          - python_version: '3.11'
            ansible_version: '2.13'
            ansible_full_version: '2.13.13'
            tags: |
              type=raw,value=python3.11-2.13.13-latest
              type=raw,value=python3.11-2.13.13

          - python_version: '3.12'
            ansible_version: '2.14'
            ansible_full_version: '2.14.18'
            tags: |
              type=raw,value=python3.12-2.14.18-latest
              type=raw,value=python3.12-2.14.18

          - python_version: '3.12'
            ansible_version: '2.15'
            ansible_full_version: '2.15.13'
            tags: |
              type=raw,value=python3.12-2.15.13-latest
              type=raw,value=python3.12-2.15.13
              type=raw,value=latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.GITHUB_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.REGISTRY_ACCESS_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.GITHUB_REGISTRY }}/${{ env.GITHUB_USERNAME }}/${{ env.IMAGE_NAME }}
          tags: |
            ${{ matrix.tags }}
          labels: |
            org.opencontainers.image.source=https://github.com/ginanck/molecule_runner
            org.opencontainers.image.description=Alpine-based Docker images for Ansible Molecule testing

      - name: Copy appropriate requirements file to build context
        run: |
          cat requirements-${{ matrix.ansible_full_version }}.txt requirements-common.txt > requirements.txt

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./dockerfiles/Dockerfile.ansible${{ matrix.ansible_version }}
          platforms: linux/amd64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
